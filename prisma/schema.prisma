// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Status {
  TO_DO
  DONE
}

model User {
  id       Int    @id @default(autoincrement())
  name     String
  email    String @unique
  password String
  roles    String @default("user")
  tasks    Task[]
}

model Task {
  id          Int      @id @default(autoincrement())
  title       String?
  description String
  category    String[] @default(["none"])
  status      Status   @default(TO_DO)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  dueAt       DateTime @default(dbgenerated("now() + 7"))
  user        User     @relation(fields: [userId], references: [id])
  userId      Int
}

// module.exports.nowPlusOneYear = () => {
//   const now = new Date();
//   now.setFullYear(now.getFullYear() + 1);
//   return now.toISOString();
// };

// other       String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid   // Postgres only

// datasource db {
//   provider = "mysql"
//   url      = env("DATABASE_URL")
// }

// enum Category {
//   HOME
//   PERSONAL
//   WORK
// }
// With enums, can only choose ONE

// model Task {
//   id          Int      @id @default(autoincrement())
//   title       String   @db.VarChar(255)
//   description String   @db.Text
//   category    Category
//   status      Status   @default(TO_DO)
//   createdAt   DateTime @default(now())
//   updatedAt   DateTime @updatedAt
//   user        User     @relation(fields: [userId], references: [id])
//   userId      Int
// }

// categories  String[]
// // ERROR (with MySQL): Field "categories" in model "Task" can't be a list. The current connector does not support lists of primitive types. See:
// // https://www.prisma.io/docs/orm/more/upgrade-guides/upgrade-from-prisma-1/schema-incompatibilities-mysql#scalar-lists-arrays-are-maintained-with-extra-table
// // https://www.prisma.io/docs/orm/reference/prisma-schema-reference#-modifier
